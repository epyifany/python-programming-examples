{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### pandas load csv file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'matplotlib'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-127-39dd3a7adc74>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpandas\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmath\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'matplotlib'"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import math\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.528442781499164\n",
      "3.1231097212480456\n",
      "1.8024709237467667\n",
      "1.7266703793110658\n"
     ]
    }
   ],
   "source": [
    "# Good for load small dataset\n",
    "data = pd.read_csv('data-film.csv', encoding='utf-8', header=0)\n",
    "f = open('data-film.csv', 'r')\n",
    "lines = [line.strip('\\n').split(',') for line in f][1:150]\n",
    "\n",
    "# n is the number of samples \n",
    "n = data['FILM_ID'].count()\n",
    "\n",
    "# get list of features\n",
    "f = open('data-film.csv', 'r')\n",
    "features = [line.strip('\\n').split(',') for line in f][0:1][0][1:5]\n",
    "\n",
    "\n",
    "feature_no = 1 # starting point of feature labels\n",
    "\n",
    "for feature in features:\n",
    "    SUM = 0\n",
    "    sum_of_diff_sq = 0\n",
    "    Z_Score = []\n",
    "    \n",
    "    # find sample sum and sample mean\n",
    "    for film in lines:\n",
    "        SUM += float(film[feature_no])\n",
    "    mean = SUM / n\n",
    "    \n",
    "    # find sample variance and standard deviation\n",
    "    for film in lines:\n",
    "        sum_of_diff_sq += (float(film[feature_no]) - mean) * (float(film[feature_no]) - mean)\n",
    "#     print(sum_of_diff_sq)    \n",
    "    variance = sum_of_diff_sq / (n - 1)   \n",
    "    std_dev = math.sqrt(variance)\n",
    "    \n",
    "    \n",
    "    # find min/max z score\n",
    "    for film in lines:\n",
    "        Z_Score.append(abs((float(film[feature_no]) - mean) / std_dev))\n",
    "#         if MAX_Z_Score < abs((float(film[feature_no]) - mean) / std_dev):\n",
    "#             MAX_Z_Score = abs((float(film[feature_no]) - mean) / std_dev)\n",
    "    print(max(Z_Score))\n",
    "        \n",
    "    # proceed to the next feature        \n",
    "    feature_no = feature_no + 1\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0        f1\n",
      "1        f2\n",
      "2        f3\n",
      "3        f4\n",
      "4        f5\n",
      "5        f6\n",
      "6        f7\n",
      "7        f8\n",
      "8        f9\n",
      "9       f10\n",
      "10      f11\n",
      "11      f12\n",
      "12      f13\n",
      "13      f14\n",
      "14      f15\n",
      "15      f16\n",
      "16      f17\n",
      "17      f18\n",
      "18      f19\n",
      "19      f20\n",
      "20      f21\n",
      "21      f22\n",
      "22      f23\n",
      "23      f24\n",
      "24      f25\n",
      "25      f26\n",
      "26      f27\n",
      "27      f28\n",
      "28      f29\n",
      "29      f30\n",
      "       ... \n",
      "120    f121\n",
      "121    f122\n",
      "122    f123\n",
      "123    f124\n",
      "124    f125\n",
      "125    f126\n",
      "126    f127\n",
      "127    f128\n",
      "128    f129\n",
      "129    f130\n",
      "130    f131\n",
      "131    f132\n",
      "132    f133\n",
      "133    f134\n",
      "134    f135\n",
      "135    f136\n",
      "136    f137\n",
      "137    f138\n",
      "138    f139\n",
      "139    f140\n",
      "140    f141\n",
      "141    f142\n",
      "142    f143\n",
      "143    f144\n",
      "144    f145\n",
      "145    f146\n",
      "146    f147\n",
      "147    f148\n",
      "148    f149\n",
      "149    f150\n",
      "Name: FILM_ID, Length: 150, dtype: object\n",
      "0      5.1\n",
      "1      4.9\n",
      "2      4.7\n",
      "3      4.6\n",
      "4      5.0\n",
      "5      5.4\n",
      "6      4.6\n",
      "7      5.0\n",
      "8      4.4\n",
      "9      4.9\n",
      "10     5.4\n",
      "11     4.8\n",
      "12     4.8\n",
      "13     4.3\n",
      "14     5.8\n",
      "15     5.7\n",
      "16     5.4\n",
      "17     5.1\n",
      "18     5.7\n",
      "19     5.1\n",
      "20     5.4\n",
      "21     5.1\n",
      "22     4.6\n",
      "23     5.1\n",
      "24     4.8\n",
      "25     5.0\n",
      "26     5.0\n",
      "27     5.2\n",
      "28     5.2\n",
      "29     4.7\n",
      "      ... \n",
      "120    6.9\n",
      "121    5.6\n",
      "122    7.7\n",
      "123    6.3\n",
      "124    6.7\n",
      "125    7.2\n",
      "126    6.2\n",
      "127    6.1\n",
      "128    6.4\n",
      "129    7.2\n",
      "130    7.4\n",
      "131    7.9\n",
      "132    6.4\n",
      "133    6.3\n",
      "134    6.1\n",
      "135    7.7\n",
      "136    6.3\n",
      "137    6.4\n",
      "138    6.0\n",
      "139    6.9\n",
      "140    6.7\n",
      "141    6.9\n",
      "142    5.8\n",
      "143    6.8\n",
      "144    6.7\n",
      "145    6.7\n",
      "146    6.3\n",
      "147    6.5\n",
      "148    6.2\n",
      "149    5.9\n",
      "Name: AVGRATING_WEBSITE_1, Length: 150, dtype: float64\n",
      "0      3.5\n",
      "1      3.0\n",
      "2      3.2\n",
      "3      3.1\n",
      "4      3.6\n",
      "5      3.9\n",
      "6      3.4\n",
      "7      3.4\n",
      "8      2.9\n",
      "9      3.1\n",
      "10     3.7\n",
      "11     3.4\n",
      "12     3.0\n",
      "13     3.0\n",
      "14     4.0\n",
      "15     4.4\n",
      "16     3.9\n",
      "17     3.5\n",
      "18     3.8\n",
      "19     3.8\n",
      "20     3.4\n",
      "21     3.7\n",
      "22     3.6\n",
      "23     3.3\n",
      "24     3.4\n",
      "25     3.0\n",
      "26     3.4\n",
      "27     3.5\n",
      "28     3.4\n",
      "29     3.2\n",
      "      ... \n",
      "120    3.2\n",
      "121    2.8\n",
      "122    2.8\n",
      "123    2.7\n",
      "124    3.3\n",
      "125    3.2\n",
      "126    2.8\n",
      "127    3.0\n",
      "128    2.8\n",
      "129    3.0\n",
      "130    2.8\n",
      "131    3.8\n",
      "132    2.8\n",
      "133    2.8\n",
      "134    2.6\n",
      "135    3.0\n",
      "136    3.4\n",
      "137    3.1\n",
      "138    3.0\n",
      "139    3.1\n",
      "140    3.1\n",
      "141    3.1\n",
      "142    2.7\n",
      "143    3.2\n",
      "144    3.3\n",
      "145    3.0\n",
      "146    2.5\n",
      "147    3.0\n",
      "148    3.4\n",
      "149    3.0\n",
      "Name: AVGRATING_WEBSITE_2, Length: 150, dtype: float64\n",
      "0      1.4\n",
      "1      1.4\n",
      "2      1.3\n",
      "3      1.5\n",
      "4      1.4\n",
      "5      1.7\n",
      "6      1.4\n",
      "7      1.5\n",
      "8      1.4\n",
      "9      1.5\n",
      "10     1.5\n",
      "11     1.6\n",
      "12     1.4\n",
      "13     1.1\n",
      "14     1.2\n",
      "15     1.5\n",
      "16     1.3\n",
      "17     1.4\n",
      "18     1.7\n",
      "19     1.5\n",
      "20     1.7\n",
      "21     1.5\n",
      "22     1.0\n",
      "23     1.7\n",
      "24     1.9\n",
      "25     1.6\n",
      "26     1.6\n",
      "27     1.5\n",
      "28     1.4\n",
      "29     1.6\n",
      "      ... \n",
      "120    5.7\n",
      "121    4.9\n",
      "122    6.7\n",
      "123    4.9\n",
      "124    5.7\n",
      "125    6.0\n",
      "126    4.8\n",
      "127    4.9\n",
      "128    5.6\n",
      "129    5.8\n",
      "130    6.1\n",
      "131    6.4\n",
      "132    5.6\n",
      "133    5.1\n",
      "134    5.6\n",
      "135    6.1\n",
      "136    5.6\n",
      "137    5.5\n",
      "138    4.8\n",
      "139    5.4\n",
      "140    5.6\n",
      "141    5.1\n",
      "142    5.1\n",
      "143    5.9\n",
      "144    5.7\n",
      "145    5.2\n",
      "146    5.0\n",
      "147    5.2\n",
      "148    5.4\n",
      "149    5.1\n",
      "Name: AVGRATING_WEBSITE_3, Length: 150, dtype: float64\n",
      "0      0.2\n",
      "1      0.2\n",
      "2      0.2\n",
      "3      0.2\n",
      "4      0.3\n",
      "5      0.4\n",
      "6      0.3\n",
      "7      0.2\n",
      "8      0.2\n",
      "9      0.1\n",
      "10     0.2\n",
      "11     0.2\n",
      "12     0.1\n",
      "13     0.1\n",
      "14     0.2\n",
      "15     0.4\n",
      "16     0.4\n",
      "17     0.3\n",
      "18     0.3\n",
      "19     0.3\n",
      "20     0.2\n",
      "21     0.4\n",
      "22     0.2\n",
      "23     0.5\n",
      "24     0.2\n",
      "25     0.2\n",
      "26     0.4\n",
      "27     0.2\n",
      "28     0.2\n",
      "29     0.2\n",
      "      ... \n",
      "120    2.3\n",
      "121    2.0\n",
      "122    2.0\n",
      "123    1.8\n",
      "124    2.1\n",
      "125    1.8\n",
      "126    1.8\n",
      "127    1.8\n",
      "128    2.1\n",
      "129    1.6\n",
      "130    1.9\n",
      "131    2.0\n",
      "132    2.2\n",
      "133    1.5\n",
      "134    1.4\n",
      "135    2.3\n",
      "136    2.4\n",
      "137    1.8\n",
      "138    1.8\n",
      "139    2.1\n",
      "140    2.4\n",
      "141    2.3\n",
      "142    1.9\n",
      "143    2.3\n",
      "144    2.5\n",
      "145    2.3\n",
      "146    1.9\n",
      "147    2.0\n",
      "148    2.3\n",
      "149    1.8\n",
      "Name: AVGRATING_WEBSITE_4, Length: 150, dtype: float64\n",
      "0      ACTION\n",
      "1      ACTION\n",
      "2      ACTION\n",
      "3      ACTION\n",
      "4      ACTION\n",
      "5      ACTION\n",
      "6      ACTION\n",
      "7      ACTION\n",
      "8      ACTION\n",
      "9      ACTION\n",
      "10     ACTION\n",
      "11     ACTION\n",
      "12     ACTION\n",
      "13     ACTION\n",
      "14     ACTION\n",
      "15     ACTION\n",
      "16     ACTION\n",
      "17     ACTION\n",
      "18     ACTION\n",
      "19     ACTION\n",
      "20     ACTION\n",
      "21     ACTION\n",
      "22     ACTION\n",
      "23     ACTION\n",
      "24     ACTION\n",
      "25     ACTION\n",
      "26     ACTION\n",
      "27     ACTION\n",
      "28     ACTION\n",
      "29     ACTION\n",
      "        ...  \n",
      "120    COMEDY\n",
      "121    COMEDY\n",
      "122    COMEDY\n",
      "123    COMEDY\n",
      "124    COMEDY\n",
      "125    COMEDY\n",
      "126    COMEDY\n",
      "127    COMEDY\n",
      "128    COMEDY\n",
      "129    COMEDY\n",
      "130    COMEDY\n",
      "131    COMEDY\n",
      "132    COMEDY\n",
      "133    COMEDY\n",
      "134    COMEDY\n",
      "135    COMEDY\n",
      "136    COMEDY\n",
      "137    COMEDY\n",
      "138    COMEDY\n",
      "139    COMEDY\n",
      "140    COMEDY\n",
      "141    COMEDY\n",
      "142    COMEDY\n",
      "143    COMEDY\n",
      "144    COMEDY\n",
      "145    COMEDY\n",
      "146    COMEDY\n",
      "147    COMEDY\n",
      "148    COMEDY\n",
      "149    COMEDY\n",
      "Name: GENRE, Length: 150, dtype: object\n"
     ]
    },
    {
     "ename": "IndexError",
     "evalue": "single positional indexer is out-of-bounds",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-19-f19b408b56f8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/anaconda3/lib/python3.7/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   1492\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mKeyError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mIndexError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1493\u001b[0m                 \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1494\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1495\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1496\u001b[0m             \u001b[0;31m# we by definition only have the 0th axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.7/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_getitem_tuple\u001b[0;34m(self, tup)\u001b[0m\n\u001b[1;32m   2141\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_getitem_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtup\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2142\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2143\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_has_valid_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtup\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2144\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2145\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_lowerdim\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtup\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.7/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_has_valid_tuple\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    221\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mIndexingError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Too many indexers'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    222\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 223\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_key\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    224\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    225\u001b[0m                 raise ValueError(\"Location based indexing can only have \"\n",
      "\u001b[0;32m/anaconda3/lib/python3.7/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_validate_key\u001b[0;34m(self, key, axis)\u001b[0m\n\u001b[1;32m   2068\u001b[0m             \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2069\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2070\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2071\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2072\u001b[0m             \u001b[0;31m# a tuple should already have been caught by this point\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.7/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_validate_integer\u001b[0;34m(self, key, axis)\u001b[0m\n\u001b[1;32m   2137\u001b[0m         \u001b[0mlen_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2138\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mkey\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mlen_axis\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mkey\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0mlen_axis\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2139\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mIndexError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"single positional indexer is out-of-bounds\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2140\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2141\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_getitem_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtup\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mIndexError\u001b[0m: single positional indexer is out-of-bounds"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0        f1\n",
      "1        f2\n",
      "2        f3\n",
      "3        f4\n",
      "4        f5\n",
      "5        f6\n",
      "6        f7\n",
      "7        f8\n",
      "8        f9\n",
      "9       f10\n",
      "10      f11\n",
      "11      f12\n",
      "12      f13\n",
      "13      f14\n",
      "14      f15\n",
      "15      f16\n",
      "16      f17\n",
      "17      f18\n",
      "18      f19\n",
      "19      f20\n",
      "20      f21\n",
      "21      f22\n",
      "22      f23\n",
      "23      f24\n",
      "24      f25\n",
      "25      f26\n",
      "26      f27\n",
      "27      f28\n",
      "28      f29\n",
      "29      f30\n",
      "       ... \n",
      "120    f121\n",
      "121    f122\n",
      "122    f123\n",
      "123    f124\n",
      "124    f125\n",
      "125    f126\n",
      "126    f127\n",
      "127    f128\n",
      "128    f129\n",
      "129    f130\n",
      "130    f131\n",
      "131    f132\n",
      "132    f133\n",
      "133    f134\n",
      "134    f135\n",
      "135    f136\n",
      "136    f137\n",
      "137    f138\n",
      "138    f139\n",
      "139    f140\n",
      "140    f141\n",
      "141    f142\n",
      "142    f143\n",
      "143    f144\n",
      "144    f145\n",
      "145    f146\n",
      "146    f147\n",
      "147    f148\n",
      "148    f149\n",
      "149    f150\n",
      "Name: FILM_ID, Length: 150, dtype: object\n",
      "0      5.1\n",
      "1      4.9\n",
      "2      4.7\n",
      "3      4.6\n",
      "4      5.0\n",
      "5      5.4\n",
      "6      4.6\n",
      "7      5.0\n",
      "8      4.4\n",
      "9      4.9\n",
      "10     5.4\n",
      "11     4.8\n",
      "12     4.8\n",
      "13     4.3\n",
      "14     5.8\n",
      "15     5.7\n",
      "16     5.4\n",
      "17     5.1\n",
      "18     5.7\n",
      "19     5.1\n",
      "20     5.4\n",
      "21     5.1\n",
      "22     4.6\n",
      "23     5.1\n",
      "24     4.8\n",
      "25     5.0\n",
      "26     5.0\n",
      "27     5.2\n",
      "28     5.2\n",
      "29     4.7\n",
      "      ... \n",
      "120    6.9\n",
      "121    5.6\n",
      "122    7.7\n",
      "123    6.3\n",
      "124    6.7\n",
      "125    7.2\n",
      "126    6.2\n",
      "127    6.1\n",
      "128    6.4\n",
      "129    7.2\n",
      "130    7.4\n",
      "131    7.9\n",
      "132    6.4\n",
      "133    6.3\n",
      "134    6.1\n",
      "135    7.7\n",
      "136    6.3\n",
      "137    6.4\n",
      "138    6.0\n",
      "139    6.9\n",
      "140    6.7\n",
      "141    6.9\n",
      "142    5.8\n",
      "143    6.8\n",
      "144    6.7\n",
      "145    6.7\n",
      "146    6.3\n",
      "147    6.5\n",
      "148    6.2\n",
      "149    5.9\n",
      "Name: AVGRATING_WEBSITE_1, Length: 150, dtype: float64\n",
      "0      3.5\n",
      "1      3.0\n",
      "2      3.2\n",
      "3      3.1\n",
      "4      3.6\n",
      "5      3.9\n",
      "6      3.4\n",
      "7      3.4\n",
      "8      2.9\n",
      "9      3.1\n",
      "10     3.7\n",
      "11     3.4\n",
      "12     3.0\n",
      "13     3.0\n",
      "14     4.0\n",
      "15     4.4\n",
      "16     3.9\n",
      "17     3.5\n",
      "18     3.8\n",
      "19     3.8\n",
      "20     3.4\n",
      "21     3.7\n",
      "22     3.6\n",
      "23     3.3\n",
      "24     3.4\n",
      "25     3.0\n",
      "26     3.4\n",
      "27     3.5\n",
      "28     3.4\n",
      "29     3.2\n",
      "      ... \n",
      "120    3.2\n",
      "121    2.8\n",
      "122    2.8\n",
      "123    2.7\n",
      "124    3.3\n",
      "125    3.2\n",
      "126    2.8\n",
      "127    3.0\n",
      "128    2.8\n",
      "129    3.0\n",
      "130    2.8\n",
      "131    3.8\n",
      "132    2.8\n",
      "133    2.8\n",
      "134    2.6\n",
      "135    3.0\n",
      "136    3.4\n",
      "137    3.1\n",
      "138    3.0\n",
      "139    3.1\n",
      "140    3.1\n",
      "141    3.1\n",
      "142    2.7\n",
      "143    3.2\n",
      "144    3.3\n",
      "145    3.0\n",
      "146    2.5\n",
      "147    3.0\n",
      "148    3.4\n",
      "149    3.0\n",
      "Name: AVGRATING_WEBSITE_2, Length: 150, dtype: float64\n",
      "0      1.4\n",
      "1      1.4\n",
      "2      1.3\n",
      "3      1.5\n",
      "4      1.4\n",
      "5      1.7\n",
      "6      1.4\n",
      "7      1.5\n",
      "8      1.4\n",
      "9      1.5\n",
      "10     1.5\n",
      "11     1.6\n",
      "12     1.4\n",
      "13     1.1\n",
      "14     1.2\n",
      "15     1.5\n",
      "16     1.3\n",
      "17     1.4\n",
      "18     1.7\n",
      "19     1.5\n",
      "20     1.7\n",
      "21     1.5\n",
      "22     1.0\n",
      "23     1.7\n",
      "24     1.9\n",
      "25     1.6\n",
      "26     1.6\n",
      "27     1.5\n",
      "28     1.4\n",
      "29     1.6\n",
      "      ... \n",
      "120    5.7\n",
      "121    4.9\n",
      "122    6.7\n",
      "123    4.9\n",
      "124    5.7\n",
      "125    6.0\n",
      "126    4.8\n",
      "127    4.9\n",
      "128    5.6\n",
      "129    5.8\n",
      "130    6.1\n",
      "131    6.4\n",
      "132    5.6\n",
      "133    5.1\n",
      "134    5.6\n",
      "135    6.1\n",
      "136    5.6\n",
      "137    5.5\n",
      "138    4.8\n",
      "139    5.4\n",
      "140    5.6\n",
      "141    5.1\n",
      "142    5.1\n",
      "143    5.9\n",
      "144    5.7\n",
      "145    5.2\n",
      "146    5.0\n",
      "147    5.2\n",
      "148    5.4\n",
      "149    5.1\n",
      "Name: AVGRATING_WEBSITE_3, Length: 150, dtype: float64\n",
      "0      0.2\n",
      "1      0.2\n",
      "2      0.2\n",
      "3      0.2\n",
      "4      0.3\n",
      "5      0.4\n",
      "6      0.3\n",
      "7      0.2\n",
      "8      0.2\n",
      "9      0.1\n",
      "10     0.2\n",
      "11     0.2\n",
      "12     0.1\n",
      "13     0.1\n",
      "14     0.2\n",
      "15     0.4\n",
      "16     0.4\n",
      "17     0.3\n",
      "18     0.3\n",
      "19     0.3\n",
      "20     0.2\n",
      "21     0.4\n",
      "22     0.2\n",
      "23     0.5\n",
      "24     0.2\n",
      "25     0.2\n",
      "26     0.4\n",
      "27     0.2\n",
      "28     0.2\n",
      "29     0.2\n",
      "      ... \n",
      "120    2.3\n",
      "121    2.0\n",
      "122    2.0\n",
      "123    1.8\n",
      "124    2.1\n",
      "125    1.8\n",
      "126    1.8\n",
      "127    1.8\n",
      "128    2.1\n",
      "129    1.6\n",
      "130    1.9\n",
      "131    2.0\n",
      "132    2.2\n",
      "133    1.5\n",
      "134    1.4\n",
      "135    2.3\n",
      "136    2.4\n",
      "137    1.8\n",
      "138    1.8\n",
      "139    2.1\n",
      "140    2.4\n",
      "141    2.3\n",
      "142    1.9\n",
      "143    2.3\n",
      "144    2.5\n",
      "145    2.3\n",
      "146    1.9\n",
      "147    2.0\n",
      "148    2.3\n",
      "149    1.8\n",
      "Name: AVGRATING_WEBSITE_4, Length: 150, dtype: float64\n",
      "0      ACTION\n",
      "1      ACTION\n",
      "2      ACTION\n",
      "3      ACTION\n",
      "4      ACTION\n",
      "5      ACTION\n",
      "6      ACTION\n",
      "7      ACTION\n",
      "8      ACTION\n",
      "9      ACTION\n",
      "10     ACTION\n",
      "11     ACTION\n",
      "12     ACTION\n",
      "13     ACTION\n",
      "14     ACTION\n",
      "15     ACTION\n",
      "16     ACTION\n",
      "17     ACTION\n",
      "18     ACTION\n",
      "19     ACTION\n",
      "20     ACTION\n",
      "21     ACTION\n",
      "22     ACTION\n",
      "23     ACTION\n",
      "24     ACTION\n",
      "25     ACTION\n",
      "26     ACTION\n",
      "27     ACTION\n",
      "28     ACTION\n",
      "29     ACTION\n",
      "        ...  \n",
      "120    COMEDY\n",
      "121    COMEDY\n",
      "122    COMEDY\n",
      "123    COMEDY\n",
      "124    COMEDY\n",
      "125    COMEDY\n",
      "126    COMEDY\n",
      "127    COMEDY\n",
      "128    COMEDY\n",
      "129    COMEDY\n",
      "130    COMEDY\n",
      "131    COMEDY\n",
      "132    COMEDY\n",
      "133    COMEDY\n",
      "134    COMEDY\n",
      "135    COMEDY\n",
      "136    COMEDY\n",
      "137    COMEDY\n",
      "138    COMEDY\n",
      "139    COMEDY\n",
      "140    COMEDY\n",
      "141    COMEDY\n",
      "142    COMEDY\n",
      "143    COMEDY\n",
      "144    COMEDY\n",
      "145    COMEDY\n",
      "146    COMEDY\n",
      "147    COMEDY\n",
      "148    COMEDY\n",
      "149    COMEDY\n",
      "Name: GENRE, Length: 150, dtype: object\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### pandas to numpy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "w = np.array(w1 + w2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((18,), array([5.1, 4.9, 4.7, 4.6, 5. , 5.4, 4.6, 5. , 4.4, 3.5, 3. , 3.2, 3.1,\n",
       "        3.6, 3.9, 3.4, 3.4, 2.9]))"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "w.shape, w"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "w = w.reshape(3, -1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((3, 6), array([[5.1, 4.9, 4.7, 4.6, 5. , 5.4],\n",
       "        [4.6, 5. , 4.4, 3.5, 3. , 3.2],\n",
       "        [3.1, 3.6, 3.9, 3.4, 3.4, 2.9]]))"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "w.shape, w"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "w1 = np.mean(w, axis=1, keepdims=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((3, 1), array([[4.95      ],\n",
       "        [3.95      ],\n",
       "        [3.38333333]]))"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "w1.shape, w1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "w0 = np.mean(w, axis=0, keepdims=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((1, 6), array([[4.26666667, 4.5       , 4.33333333, 3.83333333, 3.8       ,\n",
       "         3.83333333]]))"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "w0.shape, w0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "wmax = np.max(w, axis=0, keepdims=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((1, 6), array([[5.1, 5. , 4.7, 4.6, 5. , 5.4]]))"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wmax.shape, wmax"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
